
import java.awt.Color;
import java.io.File;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class Reset extends javax.swing.JFrame {

    static ArrayList<User> arrUser;
    boolean checkUser = false;
    boolean checkAnswer = false;
    boolean matchPassword = false;
    boolean checkPassword = false;
    File SaveFile = new File ("shadow.txt");

    /**
     * Creates new form Reset
     *
     * @param arrUser
     */
    public Reset (ArrayList<User> arrUser) {

        initComponents ();
        Reset.arrUser = arrUser;

        txtAnswer.setEditable (false);
        txtPassword.setEditable (false);
        txtRePassword.setEditable (false);
        txtAnswer.setBackground (Color.red);
        txtPassword.setBackground (Color.red);
        txtRePassword.setBackground (Color.red);
    }

    public boolean isValidPassword (String strPass) {
        String num = ".*[0-9].*";
        String alpha = ".*[A-Z].*";
        return strPass.matches (num) && strPass.matches (alpha);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings ( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblQuestion = new javax.swing.JLabel();
        txtAnswer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        txtRePassword = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        lblRePassword = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUsername.setText("Enter Your Username");
        txtUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUsernameMouseClicked(evt);
            }
        });
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 190, 48));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Username");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        lblQuestion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuestion.setText("Question");
        getContentPane().add(lblQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, -1));

        txtAnswer.setText("Provide Your Username");
        txtAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAnswerMouseClicked(evt);
            }
        });
        txtAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnswerActionPerformed(evt);
            }
        });
        getContentPane().add(txtAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 190, 50));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Reset Password");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        getContentPane().add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 130, 40));

        txtPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPasswordMouseClicked(evt);
            }
        });
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, 200, 50));

        txtRePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRePasswordMouseClicked(evt);
            }
        });
        txtRePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRePasswordActionPerformed(evt);
            }
        });
        getContentPane().add(txtRePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 200, 50));

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPassword.setText("Password");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, -1, -1));

        lblRePassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblRePassword.setText("Re-Type Password");
        getContentPane().add(lblRePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 340, -1, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, 120, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUsernameMouseClicked

        txtUsername.setText ("");

    }//GEN-LAST:event_txtUsernameMouseClicked

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAnswerMouseClicked

        if (  ! checkUser ) {
            JOptionPane.showMessageDialog (null , "You need to provide a username" , "Error" , JOptionPane.ERROR_MESSAGE);
        } else {
            txtAnswer.setText ("");
            lblQuestion.setText ("Answer");
        }
    }//GEN-LAST:event_txtAnswerMouseClicked

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        int userIndex = 0;
        String strUser = txtUsername.getText ();
        String strAnswer = txtAnswer.getText ();
        String strPassword = txtPassword.getText ();
        String strRePassword = txtRePassword.getText ();

        for ( int i = 0; i < arrUser.size (); i ++ ) {

            if ( arrUser.get (i).getUserName ().equals (strUser) ) {
                userIndex = i;
                checkUser = true;
                System.out.println (arrUser.get (userIndex).getAnswer ());
                break;
            } else {

                checkUser = false;
            }

        }

        for ( int i = 0; i < arrUser.size (); i ++ ) {

            if ( checkUser && strAnswer.equals (arrUser.get (userIndex).getAnswer ()) ) {

                checkAnswer = true;
                break;

            } else {

                checkAnswer = false;

            }

        }

        if ( checkUser ) {

            txtAnswer.setText (arrUser.get (userIndex).getQuestion ());
            txtAnswer.setBackground (Color.white);
            txtAnswer.setEditable (true);

        }

        if (  ! checkUser ) {
            JOptionPane.showMessageDialog (null , "This username doesn't exist" , "Error" , JOptionPane.ERROR_MESSAGE);
            txtAnswer.setBackground (Color.red);
            txtAnswer.setEditable (false);
            txtAnswer.setText ("Provide Your Username");
        }

        if ( ( checkUser ) && ( checkAnswer ) ) {

            txtPassword.setEditable (true);
            txtRePassword.setEditable (true);
            txtPassword.setBackground (Color.white);
            txtRePassword.setBackground (Color.white);
            txtAnswer.setText (strAnswer);

        } else if ( ( checkUser ) && (  ! checkAnswer ) ) {

            txtPassword.setEditable (false);
            txtRePassword.setEditable (false);
            txtPassword.setBackground (Color.red);
            txtRePassword.setBackground (Color.red);

            if (  ! ( strAnswer.equals ("Provide Your Username") ) ) {
                JOptionPane.showMessageDialog (null , "This information is wrong" , "Error" , JOptionPane.ERROR_MESSAGE);
            }
        }

        checkPassword = isValidPassword (strPassword);
        if (  ! ( strPassword.equals (" ") ) &&  ! ( strPassword.equals ("") ) ) {
            if (  ! checkPassword ) {

                JOptionPane.showMessageDialog (null , "Password Should Have Uppercase, Lowercase and Numbers" , "Error" , JOptionPane.ERROR_MESSAGE);

            } else {
                int length = strPassword.length ();
                if ( length < 7 ) {
                    JOptionPane.showMessageDialog (null , "Password Should Be 8 Or More Characters" , "Error" , JOptionPane.ERROR_MESSAGE);
                } else {

                    if ( strPassword.equals (strRePassword) ) {
                        matchPassword = true;
                    } else {
                        matchPassword = false;
                        JOptionPane.showMessageDialog (null , "Password Mismatch" , "Error" , JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }

        for ( int j = 0; j < arrUser.size (); j ++ ) {
            if ( ( j == userIndex ) && matchPassword ) {
                String hashPass = BCrypt.hashpw (strPassword , BCrypt.gensalt (13));
                arrUser.set (userIndex , new User (arrUser.get (userIndex).getName () , arrUser.get (userIndex).getUserName () , hashPass , hashPass , arrUser.get (j).getQuestion () , arrUser.get (j).getAnswer ()));
                JOptionPane.showMessageDialog (null , "Your account was successfully updated" , "Update Account" , JOptionPane.INFORMATION_MESSAGE);
                Register reg;
                try {
                    reg = new Register (arrUser);
                    reg.saveToFile (arrUser);
                } catch ( NoSuchAlgorithmException | NoSuchPaddingException ex ) {
                    Logger.getLogger (Reset.class.getName ()).log (Level.SEVERE , null , ex);
                }

            }
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnswerActionPerformed

    private void txtRePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRePasswordMouseClicked

        if (  ! checkUser ) {
            JOptionPane.showMessageDialog (null , "Provide a username and the answer" , "Error" , JOptionPane.ERROR_MESSAGE);
        } else {
            txtRePassword.setText ("");
        }


    }//GEN-LAST:event_txtRePasswordMouseClicked

    private void txtPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPasswordMouseClicked
        if (  ! checkUser ) {
            JOptionPane.showMessageDialog (null , "Provide a username and the answer" , "Error" , JOptionPane.ERROR_MESSAGE);
        } else {
            txtPassword.setText ("");
        }
    }//GEN-LAST:event_txtPasswordMouseClicked

    private void txtRePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRePasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRePasswordActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        Login log = new Login ();
        log.setVisible (true);
        log.setSize (900 , 600);
        log.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        this.dispose ();

    }//GEN-LAST:event_btnBackActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        /*
            Change File Permission
         */
        File shadow = new File ("shadow.txt");
        File integrity = new File ("integrity.txt");

        shadow.setExecutable (false);
        shadow.setReadable (false);
        shadow.setWritable (false);

        integrity.setExecutable (false);
        integrity.setReadable (false);
        integrity.setWritable (false);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main (String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels () ) {
                if ( "Nimbus".equals (info.getName ()) ) {
                    javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger (Reset.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger (Reset.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger (Reset.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger (Reset.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater (new Runnable () {
            public void run () {
                new Reset (arrUser).setVisible (true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblRePassword;
    private javax.swing.JTextField txtAnswer;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRePassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
