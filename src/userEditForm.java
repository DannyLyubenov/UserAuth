
import java.io.File;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class userEditForm extends javax.swing.JFrame {

    File SaveFile = new File ("shadow.txt");
    public static ArrayList<User> arrUser;
    public static int userIndex;
    public static String answer;
    public static String question;
    boolean checkPassword = false;

    /**
     * Creates new form userEditForm
     *
     * @param arrUser
     * @param index
     * @param question
     * @param answer
     */
    public userEditForm (ArrayList<User> arrUser , int index , String question , String answer) {
        initComponents ();
        userEditForm.question = question;
        userEditForm.answer = answer;
        userEditForm.arrUser = arrUser;
        userEditForm.userIndex = index;
        txtRePassword.setText (userEditForm.arrUser.get (userIndex).getRePassword ());
        txtUserName.setText (userEditForm.arrUser.get (userIndex).getUserName ());
        txtPassword.setText (userEditForm.arrUser.get (userIndex).getPassword ());
        txtName.setText (userEditForm.arrUser.get (userIndex).getName ());
        txtName.setEditable (false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings ( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtName = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        txtRePassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNameMouseClicked(evt);
            }
        });

        txtUserName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUserNameMouseClicked(evt);
            }
        });
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Username");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Re-Type Password");

        Back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPasswordMouseClicked(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtRePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRePasswordMouseClicked(evt);
            }
        });
        txtRePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRePasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addComponent(txtRePassword)
                    .addComponent(txtUserName)
                    .addComponent(txtName))
                .addGap(284, 284, 284))
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(Back)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back)
                    .addComponent(btnUpdate))
                .addGap(194, 194, 194))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    public boolean isValidPassword (String strPass) {
        String num = ".*[0-9].*";
        String alpha = ".*[A-Z].*";
        return strPass.matches (num) && strPass.matches (alpha);
    }


    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        String username = txtUserName.getText ();
        String name = txtName.getText ();
        String password = txtPassword.getText ();
        String rePassword = txtRePassword.getText ();
        boolean userUpdate = false;
        boolean userCheck = false;
        boolean matchPassword = false;

        for ( int i = 0; i < arrUser.size (); i ++ ) {

            if ( username.equals (arrUser.get (i).getUserName ()) && i != userIndex ) {
                JOptionPane.showMessageDialog (null , "This username already exists, please select another username" , "Error" , JOptionPane.ERROR_MESSAGE);
                userCheck = false;
                break;
            } else if ( i == userIndex ) {
                userUpdate = true;
            } else if (  ! username.equals (arrUser.get (i).getUserName ()) ) {
                userCheck = true;
            }

        }

        checkPassword = isValidPassword (password);
        if (  ! ( password.equals (" ") ) &&  ! ( password.equals ("") ) ) {
            if (  ! checkPassword ) {

                JOptionPane.showMessageDialog (null , "Password Should Have Uppercase, Lowercase and Numbers" , "Error" , JOptionPane.ERROR_MESSAGE);

            } else {
                int length = password.length ();
                if ( length < 7 ) {
                    JOptionPane.showMessageDialog (null , "Password Should Be 8 Or More Characters" , "Error" , JOptionPane.ERROR_MESSAGE);
                } else {

                    if ( password.equals (rePassword) ) {
                        matchPassword = true;
                    } else {
                        matchPassword = false;
                        JOptionPane.showMessageDialog (null , "Password Mismatch" , "Error" , JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }

        for ( int i = 0; i < arrUser.size (); i ++ ) {
            if ( i == userIndex && userUpdate && userCheck && matchPassword ) {
                String hashPass = BCrypt.hashpw (password , BCrypt.gensalt (13));
                arrUser.set (userIndex , new User (name , username , hashPass , hashPass , question , answer));
                JOptionPane.showMessageDialog (null , "Your account was successfully updated" , "Update Account" , JOptionPane.INFORMATION_MESSAGE);
                try {
                    Register reg = new Register (arrUser);
                    reg.saveToFile (arrUser);
                } catch ( NoSuchAlgorithmException | NoSuchPaddingException ex ) {
                    Logger.getLogger (userEditForm.class.getName ()).log (Level.SEVERE , null , ex);
                }
                UserMenu um = new UserMenu (arrUser , userIndex , question , answer);
                um.setVisible (true);
                um.setSize (900 , 600);
                um.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
                this.dispose ();
            }
        }


    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtRePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRePasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRePasswordActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        UserMenu um = new UserMenu (arrUser , userIndex , question , answer);
        System.out.println ("index: " + userIndex);
        um.setVisible (true);
        um.setSize (900 , 600);
        um.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        this.dispose ();
    }//GEN-LAST:event_BackActionPerformed

    private void txtNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNameMouseClicked

    }//GEN-LAST:event_txtNameMouseClicked

    private void txtUserNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUserNameMouseClicked

        txtUserName.setText ("");

    }//GEN-LAST:event_txtUserNameMouseClicked

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPasswordMouseClicked

        txtPassword.setText ("");

    }//GEN-LAST:event_txtPasswordMouseClicked

    private void txtRePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRePasswordMouseClicked

        txtRePassword.setText ("");

    }//GEN-LAST:event_txtRePasswordMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        /*
            Change File Permission
         */
        File shadow = new File ("shadow.txt");
        File integrity = new File ("integrity.txt");

        shadow.setExecutable (false);
        shadow.setReadable (false);
        shadow.setWritable (false);

        integrity.setExecutable (false);
        integrity.setReadable (false);
        integrity.setWritable (false);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main (String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels () ) {
                if ( "Nimbus".equals (info.getName ()) ) {
                    javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger (userEditForm.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger (userEditForm.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger (userEditForm.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger (userEditForm.class.getName ()).log (java.util.logging.Level.SEVERE , null , ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater (new Runnable () {
            public void run () {
                new userEditForm (arrUser , userIndex , question , answer).setVisible (true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRePassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
